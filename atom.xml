<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ryane&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="lijianchang.xyz/"/>
  <updated>2016-03-28T19:13:24.476Z</updated>
  <id>lijianchang.xyz/</id>
  
  <author>
    <name>Ryane Lee</name>
    <email>lijianchang@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android学习-简易ViewPager的使用教程与Demo演示</title>
    <link href="lijianchang.xyz/2016/03/29/Android%E5%AD%A6%E4%B9%A0-%E7%AE%80%E6%98%93ViewPager%E7%9A%84%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B%E4%B8%8EDemo%E6%BC%94%E7%A4%BA/"/>
    <id>lijianchang.xyz/2016/03/29/Android学习-简易ViewPager的使用教程与Demo演示/</id>
    <published>2016-03-28T19:10:37.000Z</published>
    <updated>2016-03-28T19:13:24.476Z</updated>
    
    <content type="html">&lt;p&gt;摘要：最近在项目开发中使用到了ViewPager，结合自己几天下来的学习，总结一下ViewPager的使用方法以及实现过程。&lt;/p&gt;
&lt;h2 id=&quot;实例效果&quot;&gt;&lt;a href=&quot;#实例效果&quot; class=&quot;headerlink&quot; title=&quot;实例效果&quot;&gt;&lt;/a&gt;实例效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/Post-HowToUseVP-show.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;这是谷歌&lt;a href=&quot;http://www.android-doc.com/reference/android/support/v4/view/ViewPager.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;给我们提供的一个兼容包里面的类，它说我们的ViewPager通常是配合Fragment使用的，而官方是提供了FragmentPagerAdapter和FragmentStatePagerAdapter两种方便我们将ViewPager和Fragment配合使用。下面我们主要讲ViewPager+Fragment的使用。&lt;br&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/Post-HowToUseVP-guanfang.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;Demo剖析&quot;&gt;&lt;a href=&quot;#Demo剖析&quot; class=&quot;headerlink&quot; title=&quot;Demo剖析&quot;&gt;&lt;/a&gt;Demo剖析&lt;/h2&gt;&lt;p&gt;这个Demo的难点主要在以下三部分，那么我们下面就对这三个部分进行剖析。&lt;/p&gt;
&lt;h3 id=&quot;一、top-bar部分&quot;&gt;&lt;a href=&quot;#一、top-bar部分&quot; class=&quot;headerlink&quot; title=&quot;一、top_bar部分&quot;&gt;&lt;/a&gt;一、top_bar部分&lt;/h3&gt;&lt;p&gt;这部分我们只需要设置一个外布局为LinearLayout（注意！这个Layout的高度一定不能为match_parent，只能为wrap_content，因为如果你这里使用了match_parent的话，那么就会遮挡了下面的ViewPager控件，详见我的main.xml布局文件以及top_bar.xml 布局文件，我的主布局为了代码布局清晰，所以通过定义了top_bar的layout，然后通过引入即可。）&lt;/p&gt;
&lt;h3 id=&quot;二、下标部分&quot;&gt;&lt;a href=&quot;#二、下标部分&quot; class=&quot;headerlink&quot; title=&quot;二、下标部分&quot;&gt;&lt;/a&gt;二、下标部分&lt;/h3&gt;&lt;p&gt;下标部分我们是通过一个imageview来实现。将此ImageView的背景设为一个蓝色的点九图，然后再逻辑文件中设置它的长度以及在滑动时的位置变化即可。&lt;/p&gt;
&lt;p&gt;设置滑动条的宽度&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; /**
  * 设置滑动条的宽度为屏幕的1/3(根据Tab的个数而定)
  */
private void initTabLineWidth() {
    DisplayMetrics dpMetrics = new DisplayMetrics();
    getWindow().getWindowManager().getDefaultDisplay().getMetrics(dpMetrics);
    screenWidth = dpMetrics.widthPixels;
    LinearLayout.LayoutParams lp = (LinearLayout.LayoutParams) tab.getLayoutParams();
    lp.width = screenWidth / 3;
    tab.setLayoutParams(lp);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在onPagerScrolled方法中设置滑动条的位置变化&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; @Override
 public void onPageScrolled(int position, float offset,
                                   int offsetPixels) {
     LinearLayout.LayoutParams lp = (LinearLayout.LayoutParams) tablineIv.getLayoutParams();
    Log.i(&amp;quot;mOffset&amp;quot;, &amp;quot;offset:&amp;quot; + offset + &amp;quot;,position:&amp;quot; + position);

    if (currentIndex == 0 &amp;amp;&amp;amp; position == 0)// 0-&amp;gt;1
    {
        lp.leftMargin = (int) (offset * (screenWidth * 1.0 / 3) + currentIndex
                        * (screenWidth / 3));
    } else if (currentIndex == 1 &amp;amp;&amp;amp; position == 0) // 1-&amp;gt;0
    {
        lp.leftMargin = (int) (-(1 - offset) * (screenWidth * 1.0 / 3) + currentIndex * (screenWidth / 3));
    } else if (currentIndex == 1 &amp;amp;&amp;amp; position == 1) // 1-&amp;gt;2
    {
        lp.leftMargin = (int) (offset * (screenWidth * 1.0 / 3) + currentIndex
                        * (screenWidth / 3));
    } else if (currentIndex == 2 &amp;amp;&amp;amp; position == 1) // 2-&amp;gt;1
    {
        lp.leftMargin = (int) (-(1 - offset) * (screenWidth * 1.0 / 3) + currentIndex * (screenWidth / 3));
    }
    tablineIv.setLayoutParams(lp);
}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;三、ViewPager实现部分&quot;&gt;&lt;a href=&quot;#三、ViewPager实现部分&quot; class=&quot;headerlink&quot; title=&quot;三、ViewPager实现部分&quot;&gt;&lt;/a&gt;三、ViewPager实现部分&lt;/h3&gt;&lt;p&gt;ViewPager的实现主要通过以下步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;把包含的Fragement存放到一个容器List里面去&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建一个FragmentPagerAdapter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;为ViewPager绑定此FragmentPagerAdapter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ViewPager设置默认当前的项&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ViewPager设置监听器，需要重写onPageScrollStateChanged，onPageScrolled，onPageSelected三个方法  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;代码实现&quot;&gt;&lt;a href=&quot;#代码实现&quot; class=&quot;headerlink&quot; title=&quot;代码实现&quot;&gt;&lt;/a&gt;代码实现&lt;/h2&gt;&lt;h3 id=&quot;一、界面部分&quot;&gt;&lt;a href=&quot;#一、界面部分&quot; class=&quot;headerlink&quot; title=&quot;一、界面部分&quot;&gt;&lt;/a&gt;一、界面部分&lt;/h3&gt;&lt;p&gt;在界面部分，需要将我们的顶部的内容和ViewPager分开。如下我们将top_bar内容和ViewPager分开。&lt;/p&gt;
&lt;p&gt;main.xml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;LinearLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    xmlns:tools=&amp;quot;http://schemas.android.com/tools&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;match_parent&amp;quot;
    android:orientation=&amp;quot;vertical&amp;quot;&amp;gt;

    &amp;lt;!-- 顶部的内容 --&amp;gt;
    &amp;lt;include layout=&amp;quot;@layout/top_bar&amp;quot; /&amp;gt;

    &amp;lt;!-- ViewPager --&amp;gt;
    &amp;lt;android.support.v4.view.ViewPager
        android:id=&amp;quot;@+id/viewpager&amp;quot;
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;0dp&amp;quot;
        android:layout_weight=&amp;quot;1&amp;quot; &amp;gt;
    &amp;lt;/android.support.v4.view.ViewPager&amp;gt;

&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;top_bar.xml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
    &amp;lt;!--注意最外层布局的高度不能使用match_parent，不然将会遮挡了ViewPager部分--&amp;gt;
    &amp;lt;LinearLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    xmlns:tools=&amp;quot;http://schemas.android.com/tools&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;wrap_content&amp;quot;
    android:orientation=&amp;quot;vertical&amp;quot;&amp;gt;


    &amp;lt;LinearLayout
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;wrap_content&amp;quot;
        android:baselineAligned=&amp;quot;false&amp;quot;
        android:orientation=&amp;quot;horizontal&amp;quot;&amp;gt;

        &amp;lt;TextView
            android:id=&amp;quot;@+id/mainTv&amp;quot;
            android:layout_width=&amp;quot;match_parent&amp;quot;
            android:layout_height=&amp;quot;50dp&amp;quot;
            android:layout_weight=&amp;quot;1&amp;quot;
            android:gravity=&amp;quot;center&amp;quot;
            android:text=&amp;quot;首页&amp;quot;
            android:textColor=&amp;quot;#0000FF&amp;quot;
            android:textSize=&amp;quot;18dp&amp;quot; /&amp;gt;

        &amp;lt;TextView
            android:id=&amp;quot;@+id/momentTv&amp;quot;
            android:layout_width=&amp;quot;match_parent&amp;quot;
            android:layout_height=&amp;quot;50dp&amp;quot;
            android:layout_weight=&amp;quot;1&amp;quot;
            android:gravity=&amp;quot;center&amp;quot;
            android:text=&amp;quot;朋友圈&amp;quot;
            android:textColor=&amp;quot;@android:color/black&amp;quot;
            android:textSize=&amp;quot;18dp&amp;quot; /&amp;gt;

        &amp;lt;TextView
            android:id=&amp;quot;@+id/settingTv&amp;quot;
            android:layout_width=&amp;quot;match_parent&amp;quot;
            android:layout_height=&amp;quot;50dp&amp;quot;
            android:layout_weight=&amp;quot;1&amp;quot;
            android:gravity=&amp;quot;center&amp;quot;
            android:text=&amp;quot;设置&amp;quot;
            android:textColor=&amp;quot;@android:color/black&amp;quot;
            android:textSize=&amp;quot;18dp&amp;quot; /&amp;gt;


    &amp;lt;/LinearLayout&amp;gt;

    &amp;lt;ImageView
        android:id=&amp;quot;@+id/iv_tabline&amp;quot;
        android:layout_width=&amp;quot;200dp&amp;quot;
        android:layout_height=&amp;quot;wrap_content&amp;quot;
        android:contentDescription=&amp;quot;tab&amp;quot;
        android:background=&amp;quot;@drawable/tab&amp;quot; &amp;gt;
    &amp;lt;/ImageView&amp;gt;

&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;还有我们的三个Fragment界面，基本一致。&lt;/p&gt;
&lt;p&gt;fragment_main.xml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;LinearLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;match_parent&amp;quot;&amp;gt;

    &amp;lt;TextView
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;match_parent&amp;quot;
        android:gravity=&amp;quot;center&amp;quot;
        android:text=&amp;quot;首页&amp;quot;/&amp;gt;

&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;fragment_moment.xml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;LinearLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;match_parent&amp;quot;&amp;gt;

    &amp;lt;TextView
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;match_parent&amp;quot;
        android:gravity=&amp;quot;center&amp;quot;
        android:text=&amp;quot;朋友圈&amp;quot;/&amp;gt;

&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;fragment_setting.xml&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt;
&amp;lt;LinearLayout xmlns:android=&amp;quot;http://schemas.android.com/apk/res/android&amp;quot;
    android:layout_width=&amp;quot;match_parent&amp;quot;
    android:layout_height=&amp;quot;match_parent&amp;quot;&amp;gt;

    &amp;lt;TextView
        android:layout_width=&amp;quot;match_parent&amp;quot;
        android:layout_height=&amp;quot;match_parent&amp;quot;
        android:gravity=&amp;quot;center&amp;quot;
        android:text=&amp;quot;设置&amp;quot;/&amp;gt;

&amp;lt;/LinearLayout&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;二、逻辑代码&quot;&gt;&lt;a href=&quot;#二、逻辑代码&quot; class=&quot;headerlink&quot; title=&quot;二、逻辑代码&quot;&gt;&lt;/a&gt;二、逻辑代码&lt;/h3&gt;&lt;p&gt;MainActivity.java&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package com.example.ryan.viewpagerdemo;

import android.graphics.Color;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.util.DisplayMetrics;
import android.util.Log;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import java.util.ArrayList;
import java.util.List;

/**
 * MainActivity需要继承FragmentActivity
 */
public class MainActivity extends FragmentActivity {
    private ViewPager viewPager;
    private List&amp;lt;Fragment&amp;gt; mFragmentList = new ArrayList&amp;lt;Fragment&amp;gt;();
    private FragmentAdapter mFragmentAdapter;

    //Tab显示内容TextView
    private TextView mainTv, momentTv, settingTv;
    //Tab的那个引导线
    private ImageView tablineIv;

    //三个Fragment页面
    private MainFragment mainFg;
    private MomentFragment momentFg;
    private SettingFragment settingFg;

    //ViewPager的当前选中页
    private int currentIndex;

    //屏幕的宽度
    private int screenWidth;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        findById();
        init();
        initTabLineWidth();

    }

    /**
     * 找到控件ID
     */
    private void findById() {
        mainTv = (TextView) this.findViewById(R.id.mainTv);
        momentTv = (TextView) this.findViewById(R.id.momentTv);
        settingTv = (TextView) this.findViewById(R.id.settingTv);
        tablineIv = (ImageView) this.findViewById(R.id.iv_tabline);
        viewPager = (ViewPager) this.findViewById(R.id.viewpager);
    }

    /**
     * 初始化ViewPager和设置监听器
     */
    private void init() {
        mainFg = new MainFragment();
        momentFg = new MomentFragment();
        settingFg = new SettingFragment();
        //将三个页面添加到容器里面
        mFragmentList.add(mainFg);
        mFragmentList.add(momentFg);
        mFragmentList.add(settingFg);

        //重写一个FragmentAdapter继承FragmentPagerAdapter，需要FragmentManager和存放页面的容器过去
        mFragmentAdapter = new FragmentAdapter(this.getSupportFragmentManager(), mFragmentList);
        //ViewPager绑定监听器
        viewPager.setAdapter(mFragmentAdapter);
        //ViewPager设置默认当前的项
        viewPager.setCurrentItem(0);
        //ViewPager设置监听器，需要重写onPageScrollStateChanged，onPageScrolled，onPageSelected三个方法
        viewPager.addOnPageChangeListener(new OnPageChangeListener() {

        /**
         * state滑动中的状态 有三种状态（0，1，2） 1：正在滑动 2：滑动完毕 0：什么都没做。
         * 三个方法的执行顺序为：用手指拖动翻页时，最先执行一遍onPageScrollStateChanged（1），
         * 然后不断执行onPageScrolled，放手指的时候，直接立即执行一次onPageScrollStateChanged（2），
         * 然后立即执行一次onPageSelected，然后再不断执行onPageScrolled，
         * 最后执行一次onPageScrollStateChanged（0）。
         */

        /**
         * state滑动中的状态 有三种状态（0，1，2） 1：正在滑动 2：滑动完毕 0：什么都没做。
         */
        @Override
        public void onPageScrollStateChanged(int state) {
            Log.i(&amp;quot;PageScroll：&amp;quot;, &amp;quot;onPageScrollStateChanged&amp;quot; + &amp;quot;:&amp;quot; + state);
        }

        /**
         * position :当前页面，及你点击滑动的页面 offset:当前页面偏移的百分比
         * offsetPixels:当前页面偏移的像素位置
         */
        @Override
        public void onPageScrolled(int position, float offset,
                                   int offsetPixels) {
            LinearLayout.LayoutParams lp = (LinearLayout.LayoutParams) tablineIv.getLayoutParams();
            Log.i(&amp;quot;mOffset&amp;quot;, &amp;quot;offset:&amp;quot; + offset + &amp;quot;,position:&amp;quot; + position);
            /**
              * 利用currentIndex(当前所在页面)和position(下一个页面)以及offset来
              * 设置mTabLineIv的左边距 滑动场景：
                 * 记3个页面,
                 * 从左到右分别为0,1,2
                 * 0-&amp;gt;1; 1-&amp;gt;2; 2-&amp;gt;1; 1-&amp;gt;0
                 */
                if (currentIndex == 0 &amp;amp;&amp;amp; position == 0)// 0-&amp;gt;1
                {
                    lp.leftMargin = (int) (offset * (screenWidth * 1.0 / 3) +     currentIndex
                            * (screenWidth / 3));

                } else if (currentIndex == 1 &amp;amp;&amp;amp; position == 0) // 1-&amp;gt;0
                {
                    lp.leftMargin = (int) (-(1 - offset)
                            * (screenWidth * 1.0 / 3) + currentIndex
                            * (screenWidth / 3));

                } else if (currentIndex == 1 &amp;amp;&amp;amp; position == 1) // 1-&amp;gt;2
                {
                    lp.leftMargin = (int) (offset * (screenWidth * 1.0 / 3) +     currentIndex
                            * (screenWidth / 3));
                } else if (currentIndex == 2 &amp;amp;&amp;amp; position == 1) // 2-&amp;gt;1
                {
                       lp.leftMargin = (int) (-(1 - offset)
                            * (screenWidth * 1.0 / 3) + currentIndex
                            * (screenWidth / 3));
                }
                tablineIv.setLayoutParams(lp);
            }

            /**
             * 将当前选择的页面的标题设置字体颜色为蓝色
             */
            @Override
            public void onPageSelected(int position) {
                Log.i(&amp;quot;PageScroll：&amp;quot;, &amp;quot;onPageSelected&amp;quot; + &amp;quot;:&amp;quot; + position);
                resetTextView();
                switch (position) {
                    case 0:
                        mainTv.setTextColor(Color.BLUE);
                        break;
                    case 1:
                        momentTv.setTextColor(Color.BLUE);
                        break;
                    case 2:
                        settingTv.setTextColor(Color.BLUE);
                        break;
                }
                currentIndex = position;
            }
        });

    }

    /**
     * 设置滑动条的宽度为屏幕的1/3(根据Tab的个数而定)
     */
    private void initTabLineWidth() {
           DisplayMetrics dpMetrics = new DisplayMetrics();
        getWindow().getWindowManager().getDefaultDisplay().getMetrics(dpMetrics);
        screenWidth = dpMetrics.widthPixels;
        LinearLayout.LayoutParams lp = (LinearLayout.LayoutParam    tablineIv.getLayoutParams();
        lp.width = screenWidth / 3;
        tablineIv.setLayoutParams(lp);
    }

    /**
     * 重置颜色
     */
    private void resetTextView() {
        mainTv.setTextColor(Color.BLACK);
        momentTv.setTextColor(Color.BLACK);
        settingTv.setTextColor(Color.BLACK);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;FragmentAdapter.java&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package com.example.ryan.viewpagerdemo;

import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;

import java.util.ArrayList;
import java.util.List;

public class FragmentAdapter extends FragmentPagerAdapter {

    List&amp;lt;Fragment&amp;gt; fragmentList = new ArrayList&amp;lt;Fragment&amp;gt;();
    public FragmentAdapter(FragmentManager fm,List&amp;lt;Fragment&amp;gt; fragmentList) {
        super(fm);
        this.fragmentList = fragmentList;
    }

    @Override
    public Fragment getItem(int position) {
        return fragmentList.get(position);
    }

    @Override
    public int getCount() {
        return fragmentList.size();
    }

}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;源码下载&quot;&gt;&lt;a href=&quot;#源码下载&quot; class=&quot;headerlink&quot; title=&quot;源码下载&quot;&gt;&lt;/a&gt;源码下载&lt;/h2&gt;&lt;p&gt;ps：此Demo是使用Android Studio编写的，请使用AS打开。&lt;/p&gt;
&lt;p&gt;下载地址：&lt;a href=&quot;http://download.csdn.net/detail/ljcitworld/9474994&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://download.csdn.net/detail/ljcitworld/9474994&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Github地址：&lt;a href=&quot;https://github.com/ryanlijianchang/ViewPagerDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ryanlijianchang/ViewPagerDemo&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;摘要：最近在项目开发中使用到了ViewPager，结合自己几天下来的学习，总结一下ViewPager的使用方法以及实现过程。&lt;/p&gt;
&lt;h2 id=&quot;实例效果&quot;&gt;&lt;a href=&quot;#实例效果&quot; class=&quot;headerlink&quot; title=&quot;实例效果&quot;&gt;&lt;/a&gt;实例效果
    
    </summary>
    
      <category term="Android" scheme="lijianchang.xyz/categories/Android/"/>
    
    
      <category term="ViewPager" scheme="lijianchang.xyz/tags/ViewPager/"/>
    
  </entry>
  
  <entry>
    <title>安卓开发者必备技能之-点九图的制作</title>
    <link href="lijianchang.xyz/2016/03/17/%E5%AE%89%E5%8D%93%E5%BC%80%E5%8F%91%E8%80%85%E6%8A%80%E8%83%BD%E4%B9%8B-%E7%82%B9%E4%B9%9D%E5%9B%BE%E7%9A%84%E5%88%B6%E4%BD%9C/"/>
    <id>lijianchang.xyz/2016/03/17/安卓开发者技能之-点九图的制作/</id>
    <published>2016-03-17T13:37:26.000Z</published>
    <updated>2016-03-17T15:42:22.458Z</updated>
    
    <content type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;很多安卓开发者觉得UI制作都是美工的事情，自己只需要完成控件的摆放和功能的实现。但是很多时候，在我们自己写一些小应用或者小Demo的时候，并不会有个美工在我们身边，而点九图之于我们安卓开发者来说再常见不过了，所以这个技能我们掌握了也是非常实用的。以下博文只是带大家入门使用点九图，不敢在美工设计师面前班门弄斧，大神请直接略过。&lt;/p&gt;
&lt;h2 id=&quot;点九图&quot;&gt;&lt;a href=&quot;#点九图&quot; class=&quot;headerlink&quot; title=&quot;点九图&quot;&gt;&lt;/a&gt;点九图&lt;/h2&gt;&lt;p&gt;随着智能手机的发展,我们的应用需要适应不同屏幕尺寸的手机，同一幅界面会在随着手机(或平板电脑)中的方向传感器的参数不同而改变显示的方向,在界面改变方向后,界面上的图形会因为长宽的变化而产生拉伸,造成图形的失真变形。&lt;/p&gt;
&lt;p&gt;而点九（即.9），是andriod平台的应用软件开发里的一种特殊的图片形式，文件扩展名为：.9.png，正是为了解决我们的图片在不同尺寸屏幕上显示失真而应运而生的一种格式。&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-1.jpg&quot; alt=&quot;&quot;&gt;&lt;/center&gt;

&lt;center&gt;普通拉伸和点九拉伸效果对比&lt;/center&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;经过对比，很明显，使用点九后，仍能保留图像的渐变质感，和圆角的精细度。&lt;/p&gt;
&lt;p&gt;所以，使用.9图的意义就是为了从自己.png格式的图片中选画出四条线，这四条线相互交错构成了九个部分(这就是叫做点九图的原因)，然后我们的内容只能在其中重复的那个区域显示，而我们的图片在拉伸过程中只有显示内容的部分被拉伸，从而使得我们图片的边缘部分得到了很好的保真效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;工具&quot;&gt;&lt;a href=&quot;#工具&quot; class=&quot;headerlink&quot; title=&quot;工具&quot;&gt;&lt;/a&gt;工具&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Android Studio (Android Studio自带制作点九图功能)&lt;/li&gt;
&lt;li&gt;Draw9path(PC端可以直接&lt;a href=&quot;vdisk.weibo.com/s/t7XO23ZcP4wW&quot;&gt;下载&lt;/a&gt;使用)&lt;/li&gt;
&lt;li&gt;NinePng(一个安卓应用，使用简单，去手机商店直接搜索就有了)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;制作-9图&quot;&gt;&lt;a href=&quot;#制作-9图&quot; class=&quot;headerlink&quot; title=&quot;制作.9图&quot;&gt;&lt;/a&gt;制作.9图&lt;/h2&gt;&lt;h3 id=&quot;在Android-Studio下制作&quot;&gt;&lt;a href=&quot;#在Android-Studio下制作&quot; class=&quot;headerlink&quot; title=&quot;在Android Studio下制作&quot;&gt;&lt;/a&gt;在Android Studio下制作&lt;/h3&gt;&lt;p&gt;1.打开AS，将你要制作点九图的.png图片放到工程目录的drawable文件夹下（例如我准备了一张word.png），右键，选择 Create 9-Patch file&lt;br&gt;  &lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.然后会产生一个同名的以.9.png为后缀的文件。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.双击打开 **.9.png图片&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;4.我们可以看到有四条线，就是我们上面所说到的构成九个区域的四条线，那么我们就可以直接通过拖拉着四条线选择我们所需要的区域即可，完成后在图片可以看到左和上有两条黑线，而把鼠标放到中间，就可以看到我们图片实际拉伸的区域。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-6_.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;5.拉伸右边的预览框，可以看到我们的.9图在不同拉伸情况下的效果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;在Draw9path下制作&quot;&gt;&lt;a href=&quot;#在Draw9path下制作&quot; class=&quot;headerlink&quot; title=&quot;在Draw9path下制作&quot;&gt;&lt;/a&gt;在Draw9path下制作&lt;/h3&gt;&lt;p&gt;如果你不是安卓开发者，只是一个美工人员，那么Draw9Path是一个不错的选择。&lt;/p&gt;
&lt;p&gt;1.安装完成Draw9Path之后打开 draw9patch.bat,然后按 Ctrl+O 打开一张们需要制作的图片。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-9.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.将鼠标放到中心区域，可以看到图片已经被打上马赛克，但是四周边缘留下空白的地方，这些地方就是让我们划线用的。&lt;br&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-8.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.然后我们按住鼠标，在我们需要划线的区域划线即可(按住shift+鼠标左键为删除点，不支持Ctrl+Z撤销功能)。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-10.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击右上角Show bad patches来查看我们画的线是否对齐。&lt;/li&gt;
&lt;li&gt;点击下边的Show Content显示拉伸的后的内容区域。&lt;/li&gt;
&lt;li&gt;点击下边的Show Patches显示当前图片的内容区域。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4.按Ctrl + S保存图片。&lt;/p&gt;
&lt;h3 id=&quot;在NinePng下制作&quot;&gt;&lt;a href=&quot;#在NinePng下制作&quot; class=&quot;headerlink&quot; title=&quot;在NinePng下制作&quot;&gt;&lt;/a&gt;在NinePng下制作&lt;/h3&gt;&lt;p&gt;网上已经有详细教程，此处就不给具体的教程了。&lt;/p&gt;
&lt;p&gt;详看： &lt;a href=&quot;http://www.zcool.com.cn/article/ZMTgzODUy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于点九图的介绍及其制作&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;运行效果&quot;&gt;&lt;a href=&quot;#运行效果&quot; class=&quot;headerlink&quot; title=&quot;运行效果&quot;&gt;&lt;/a&gt;运行效果&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-17.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-18.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-19.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/qianxudetianxia/archive/2011/04/17/2017591.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;App自适应draw9patch不失真背景&lt;/a&gt; -by 谦虚的天下&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zcool.com.cn/article/ZMTgzODUy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于点九图的介绍及其制作&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;很多安卓开发者觉得UI制作都是美工的事情，自己只需要完成控件的摆放和功能的实现。但是很多时候，在我们自己写一些小应用或者小Demo的时候，并不会有个美工在我们身边，而点九图之于我们安卓开发者来说再常见不过了，所以这个技能我们掌握了也是非常实用的。以下博文只是带大家入门使用点九图，不敢在美工设计师面前班门弄斧，大神请直接略过。&lt;/p&gt;
&lt;h2 id=&quot;点九图&quot;&gt;&lt;a href=&quot;#点九图&quot; class=&quot;headerlink&quot; title=&quot;点九图&quot;&gt;&lt;/a&gt;点九图&lt;/h2&gt;&lt;p&gt;随着智能手机的发展,我们的应用需要适应不同屏幕尺寸的手机，同一幅界面会在随着手机(或平板电脑)中的方向传感器的参数不同而改变显示的方向,在界面改变方向后,界面上的图形会因为长宽的变化而产生拉伸,造成图形的失真变形。&lt;/p&gt;
&lt;p&gt;而点九（即.9），是andriod平台的应用软件开发里的一种特殊的图片形式，文件扩展名为：.9.png，正是为了解决我们的图片在不同尺寸屏幕上显示失真而应运而生的一种格式。&lt;/p&gt;
&lt;center&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/post-dianjiu-1.jpg&quot; alt=&quot;&quot;&gt;&lt;/center&gt;

&lt;center&gt;普通拉伸和点九拉伸效果对比&lt;/center&gt;
    
    </summary>
    
      <category term="Android" scheme="lijianchang.xyz/categories/Android/"/>
    
    
      <category term="点九图" scheme="lijianchang.xyz/tags/%E7%82%B9%E4%B9%9D%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>小白独立搭建博客-Github-Pages和Hexo简明教程</title>
    <link href="lijianchang.xyz/2016/03/16/%E5%B0%8F%E7%99%BD%E7%8B%AC%E7%AB%8B%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2-Github-Pages%E5%92%8CHexo%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
    <id>lijianchang.xyz/2016/03/16/小白独立搭建博客-Github-Pages和Hexo简明教程/</id>
    <published>2016-03-15T17:41:40.000Z</published>
    <updated>2016-03-16T04:28:30.652Z</updated>
    
    <content type="html">&lt;p&gt;首先欢迎各位来参观我的博客：&lt;a href=&quot;http://lijianchang.xyz/&quot;&gt;Ryane’s Blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Github地址：&lt;a href=&quot;https://github.com/ryanlijianchang/ryanlijianchang.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/ryanlijianchang/ryanlijianchang.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;摘要：这是一篇有关如何使用Github Pages和Hexo搭建自己独立博客的详尽教程，里面介绍了如何使用和配置Hexo框架，如何将Hexo部署到自己的Github项目中，域名注册，以及域名的绑定，还有我在搭建自己博客过程中所遇到的各种困难。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我是一名安卓入门开发者，但，我只是&lt;strong&gt;入门&lt;/strong&gt;！而且我对网站开发以及前端的知识几乎是零基础，所以在自己刚接触这个东西的时候，我像很多人一样，都是上网找教程，但是要知道，&lt;strong&gt;那都是程序员的教程。&lt;/strong&gt;所以对于我这个网站技术小白来说，真是很难受，所以藉此机会写一篇让小白看得懂的教程。如果你是一个小白而且又想做自己的博客，可以，请跟着我的脚步，我会带你真真正正做一个属于你自己的博客。&lt;/p&gt;
&lt;p&gt;如果你还不知道你为什么要做一个博客，推荐你看：&lt;a href=&quot;http://www.cnblogs.com/jhzhu/p/3893297.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《我为什么写博客》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;入门门槛&quot;&gt;&lt;a href=&quot;#入门门槛&quot; class=&quot;headerlink&quot; title=&quot;入门门槛&quot;&gt;&lt;/a&gt;入门门槛&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;必须耐得住折腾。&lt;/li&gt;
&lt;li&gt;刻苦的学习精神和耐心。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;关于Github&quot;&gt;&lt;a href=&quot;#关于Github&quot; class=&quot;headerlink&quot; title=&quot;关于Github&quot;&gt;&lt;/a&gt;关于Github&lt;/h2&gt;&lt;center&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/github-jxw.jpg&quot; alt=&quot;&quot;&gt;&lt;/center&gt;

&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;一、Github的优点&quot;&gt;&lt;a href=&quot;#一、Github的优点&quot; class=&quot;headerlink&quot; title=&quot;一、Github的优点&quot;&gt;&lt;/a&gt;一、Github的优点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;GitHub是基于git实现的代码托管。git可能是目前最好用的版本控制系统了，非常受欢迎。&lt;/li&gt;
&lt;li&gt;GitHub可以免费使用，并且快速稳定。&lt;/li&gt;
&lt;li&gt;Github上面的世界很精彩，用久了你的眼界会开阔很多。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;二、什么是Github-Pages&quot;&gt;&lt;a href=&quot;#二、什么是Github-Pages&quot; class=&quot;headerlink&quot; title=&quot;二、什么是Github Pages&quot;&gt;&lt;/a&gt;二、什么是Github Pages&lt;/h3&gt;&lt;p&gt;Github Pages可以被认为是用户编写的、托管在github上的静态网页。&lt;/p&gt;
&lt;h3 id=&quot;三、为什么要使用Github-Pages&quot;&gt;&lt;a href=&quot;#三、为什么要使用Github-Pages&quot; class=&quot;headerlink&quot; title=&quot;三、为什么要使用Github Pages&quot;&gt;&lt;/a&gt;三、为什么要使用Github Pages&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;可以绑定你的域名(但暂时貌似只能绑定一个)。&lt;/li&gt;
&lt;li&gt;简单快捷，使用Github Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;安装Node-js&quot;&gt;&lt;a href=&quot;#安装Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装Node.js&quot;&gt;&lt;/a&gt;安装Node.js&lt;/h2&gt;&lt;p&gt;在 Windows 环境下安装 Node.js 非常简单，仅须到&lt;a href=&quot;https://nodejs.org/en/download/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网下载&lt;/a&gt;安装文件并执行即可完成安装。&lt;br&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/image-nodeJs-dl.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;像我的是Windows 64位，直接下载安装，不需要配置环境变量。&lt;/p&gt;
&lt;h2 id=&quot;安装Git&quot;&gt;&lt;a href=&quot;#安装Git&quot; class=&quot;headerlink&quot; title=&quot;安装Git&quot;&gt;&lt;/a&gt;安装Git&lt;/h2&gt;&lt;p&gt;下载 msysgit 并执行即可完成安装。(上官网要翻墙，如果你的是64位，可以&lt;a href=&quot;http://pan.baidu.com/s/1i4xAM9Z&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击此处&lt;/a&gt;下载)&lt;/p&gt;
&lt;p&gt;怎么打开Git？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/gitbash-1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/gitbash-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装教程：&lt;a href=&quot;http://jingyan.baidu.com/article/90895e0fb3495f64ed6b0b50.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何在windows下安装GIT&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Git入门教程：&lt;a href=&quot;http://git.oschina.net/progit/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pro Git（中文版）&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Git基本操作：&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/git.png&quot; alt=&quot;&quot;&gt; &lt;/p&gt;
&lt;h2 id=&quot;Hexo&quot;&gt;&lt;a href=&quot;#Hexo&quot; class=&quot;headerlink&quot; title=&quot;Hexo&quot;&gt;&lt;/a&gt;Hexo&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;h3 id=&quot;一、Hexo安装&quot;&gt;&lt;a href=&quot;#一、Hexo安装&quot; class=&quot;headerlink&quot; title=&quot;一、Hexo安装&quot;&gt;&lt;/a&gt;一、Hexo安装&lt;/h3&gt;&lt;p&gt;桌面右键鼠标，点击Git Bash Here，输入npm命令即可安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-cli -g
npm install hexo --save
#如果命令无法运行，可以尝试更换taobao的npm源
npm install -g cnpm --registry=https://registry.npm.taobao.org
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;二、Hexo初始化配置&quot;&gt;&lt;a href=&quot;#二、Hexo初始化配置&quot; class=&quot;headerlink&quot; title=&quot;二、Hexo初始化配置&quot;&gt;&lt;/a&gt;二、Hexo初始化配置&lt;/h3&gt;&lt;h4 id=&quot;创建Hexo文件夹&quot;&gt;&lt;a href=&quot;#创建Hexo文件夹&quot; class=&quot;headerlink&quot; title=&quot;创建Hexo文件夹&quot;&gt;&lt;/a&gt;创建Hexo文件夹&lt;/h4&gt;&lt;p&gt;安装完成后，根据自己喜好建立目录（如F:\Blog\Hexo），直接进入F:\Blog\Hexo文件夹下右键鼠标，点击Git Bash Here，进入Git命令框，执行以下操作。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo init
$ npm install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装 Hexo 完成后，Hexo 将会在指定文件夹中新建所需要的文件。Hexo文件夹下的目录如下：&lt;br&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/hexo-content.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;安装Hexo插件&quot;&gt;&lt;a href=&quot;#安装Hexo插件&quot; class=&quot;headerlink&quot; title=&quot;安装Hexo插件&quot;&gt;&lt;/a&gt;安装Hexo插件&lt;/h4&gt;&lt;p&gt;如果想不出错，就将下面的插件都安装完。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install hexo-generator-index --save
npm install hexo-generator-archive --save
npm install hexo-generator-category --save
npm install hexo-generator-tag --save
npm install hexo-server --save
npm install hexo-deployer-git --save
npm install hexo-deployer-heroku --save
npm install hexo-deployer-rsync --save
npm install hexo-deployer-openshift --save
npm install hexo-renderer-marked@0.2 --save
npm install hexo-renderer-stylus@0.2 --save
npm install hexo-generator-feed@1 --save
npm install hexo-generator-sitemap@1 --save
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;本地查看效果&quot;&gt;&lt;a href=&quot;#本地查看效果&quot; class=&quot;headerlink&quot; title=&quot;本地查看效果&quot;&gt;&lt;/a&gt;本地查看效果&lt;/h4&gt;&lt;p&gt;执行下面语句，执行完即可登录localhost:4000查看效果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo generate
hexo server
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;登录localhost:4000，即可看到本地的效果如下：&lt;br&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/imagelocalhost.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;将博客部署到Github-Pages上&quot;&gt;&lt;a href=&quot;#将博客部署到Github-Pages上&quot; class=&quot;headerlink&quot; title=&quot;将博客部署到Github Pages上&quot;&gt;&lt;/a&gt;将博客部署到Github Pages上&lt;/h2&gt;&lt;p&gt;那么现在本地的博客已经搭建起来了，但是我们只可以通过本地连接查看我们的博客。那么我们现在需要做的就是把本地的博客发布到服务器上，让别人也可以连接我们的博客，而Github Pages就帮我完成了这件事情。但是Github Pages的代码就是寄存在Github上面的。那么接下来我们需要在Github上面创建一个新的项目。&lt;/p&gt;
&lt;h3 id=&quot;一、注册Github账户&quot;&gt;&lt;a href=&quot;#一、注册Github账户&quot; class=&quot;headerlink&quot; title=&quot;一、注册Github账户&quot;&gt;&lt;/a&gt;一、注册Github账户&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;访问&lt;a href=&quot;访问：http://www.github.com/&quot;&gt;Github首页&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;点击右上角的&lt;a href=&quot;https://github.com/join?source=header-home&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt; Sign Up&lt;/a&gt;，注册自己的账户&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;二、创建项目代码库&quot;&gt;&lt;a href=&quot;#二、创建项目代码库&quot; class=&quot;headerlink&quot; title=&quot;二、创建项目代码库&quot;&gt;&lt;/a&gt;二、创建项目代码库&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;注册完登陆后，我们就创建一个我们自己的Github Pages项目。点击&lt;a href=&quot;https://github.com/new&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;New repository&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;创建要点如下：&lt;br&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/how-to-create-reposity.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;三、配置SSH密钥&quot;&gt;&lt;a href=&quot;#三、配置SSH密钥&quot; class=&quot;headerlink&quot; title=&quot;三、配置SSH密钥&quot;&gt;&lt;/a&gt;三、配置SSH密钥&lt;/h3&gt;&lt;p&gt;配置Github的SSH密钥可以让本地git项目与远程的github建立联系，让我们在本地写了代码之后直接通过git操作就可以实现本地代码库与Github代码库同步。操作如下：&lt;/p&gt;
&lt;h4 id=&quot;第一步、看看是否存在SSH密钥-keys&quot;&gt;&lt;a href=&quot;#第一步、看看是否存在SSH密钥-keys&quot; class=&quot;headerlink&quot; title=&quot;第一步、看看是否存在SSH密钥(keys)&quot;&gt;&lt;/a&gt;第一步、看看是否存在SSH密钥(keys)&lt;/h4&gt;&lt;p&gt;首先，我们需要看看是否看看本机是否存在SSH keys,打开Git Bash,并运行:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd ~/. ssh 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;检查你本机用户home目录下是否存在.ssh目录&lt;/p&gt;
&lt;p&gt;如果，不存在此目录，则进行第二步操作，否则，你本机已经存在ssh公钥和私钥，可以略过第二步，直接进入第三步操作。&lt;/p&gt;
&lt;h4 id=&quot;第二步、创建一对新的SSH密钥-keys&quot;&gt;&lt;a href=&quot;#第二步、创建一对新的SSH密钥-keys&quot; class=&quot;headerlink&quot; title=&quot;第二步、创建一对新的SSH密钥(keys)&quot;&gt;&lt;/a&gt;第二步、创建一对新的SSH密钥(keys)&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;$ssh-keygen -t rsa -C &amp;quot;your_email@example.com&amp;quot;
#这将按照你提供的邮箱地址，创建一对密钥
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/you/.ssh/id_rsa): [Press enter]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;直接回车，则将密钥按默认文件进行存储。此时也可以输入特定的文件名，比如/c/Users/you/.ssh/github_rsa&lt;/p&gt;
&lt;p&gt;接着，根据提示，你需要输入密码和确认密码（说到这里，如果你很放心，其实可以不用密码，就是到输密码的地方，都直接回车，所以每次push就只管回车就行了。所谓的最安全的密码，就是没有密码 哈哈）。相关提示如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Enter passphrase (empty for no passphrase): [Type a passphrase]
Enter same passphrase again: [Type passphrase again]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入完成之后，屏幕会显示如下信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Your identification has been saved in /c/Users/you/.ssh/id_rsa.
Your public key has been saved in /c/Users/you/.ssh/id_rsa.pub.
The key fingerprint is:
01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;第三步、在GitHub账户中添加你的公钥&quot;&gt;&lt;a href=&quot;#第三步、在GitHub账户中添加你的公钥&quot; class=&quot;headerlink&quot; title=&quot;第三步、在GitHub账户中添加你的公钥&quot;&gt;&lt;/a&gt;第三步、在GitHub账户中添加你的公钥&lt;/h4&gt;&lt;p&gt;运行如下命令，将公钥的内容复制到系统粘贴板(clipboard)中。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;clip &amp;lt; ~/.ssh/id_rsa.pub
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;登陆GitHub,进入你的Account Settings.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/SSH-github-setting.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.选择SSH Keys&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/SSH-github-setting-SSH.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.粘贴密钥，添加即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/SSH-github-SSH-OK.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第四步、测试&quot;&gt;&lt;a href=&quot;#第四步、测试&quot; class=&quot;headerlink&quot; title=&quot;第四步、测试&quot;&gt;&lt;/a&gt;第四步、测试&lt;/h4&gt;&lt;p&gt;可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果是下面的反馈：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The authenticity of host &amp;apos;github.com (207.97.227.239)&amp;apos; can&amp;apos;t be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)?
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不要紧张，输入yes就好，然后会看到：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hi cnfeat! You&amp;apos;ve successfully authenticated, but GitHub does not provide shell access.
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;第五步、设置用户信息&quot;&gt;&lt;a href=&quot;#第五步、设置用户信息&quot; class=&quot;headerlink&quot; title=&quot;第五步、设置用户信息&quot;&gt;&lt;/a&gt;第五步、设置用户信息&lt;/h4&gt;&lt;p&gt;现在你已经可以通过SSH链接到GitHub了，还有一些个人信息需要完善的。&lt;br&gt;Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，输入下面的代码进行个人信息的设置，把名称和邮箱替换成你自己的，名字必须是你的真名，而不是GitHub的昵称。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git config --global user.name &amp;quot;cnfeat&amp;quot;//用户名
$ git config --global user.email  &amp;quot;cnfeat@gmail.com&amp;quot;//填写自己的邮箱
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;第六步、SSH-Key配置成功&quot;&gt;&lt;a href=&quot;#第六步、SSH-Key配置成功&quot; class=&quot;headerlink&quot; title=&quot;第六步、SSH Key配置成功&quot;&gt;&lt;/a&gt;第六步、SSH Key配置成功&lt;/h4&gt;&lt;p&gt;本机已成功连接到github。&lt;br&gt;如有问题，请参考：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/generating-an-ssh-key/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub Help - Generating SSH Keys&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/error-permission-denied-publickey/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Error: Permission denied (publickey)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;四、将本地的Hexo文件更新到Github的库中&quot;&gt;&lt;a href=&quot;#四、将本地的Hexo文件更新到Github的库中&quot; class=&quot;headerlink&quot; title=&quot;四、将本地的Hexo文件更新到Github的库中&quot;&gt;&lt;/a&gt;四、将本地的Hexo文件更新到Github的库中&lt;/h3&gt;&lt;h4 id=&quot;第一步、登录Github打开自己的项目-username-github-io&quot;&gt;&lt;a href=&quot;#第一步、登录Github打开自己的项目-username-github-io&quot; class=&quot;headerlink&quot; title=&quot;第一步、登录Github打开自己的项目 username.github.io&quot;&gt;&lt;/a&gt;第一步、登录Github打开自己的项目 username.github.io&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/getHTTPS-teach_1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第二步、打开之后，点击HTTPS，选择HTTPS类型地址&quot;&gt;&lt;a href=&quot;#第二步、打开之后，点击HTTPS，选择HTTPS类型地址&quot; class=&quot;headerlink&quot; title=&quot;第二步、打开之后，点击HTTPS，选择HTTPS类型地址&quot;&gt;&lt;/a&gt;第二步、打开之后，点击HTTPS，选择HTTPS类型地址&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/getHTTPS-teach_2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第三步、复制地址&quot;&gt;&lt;a href=&quot;#第三步、复制地址&quot; class=&quot;headerlink&quot; title=&quot;第三步、复制地址&quot;&gt;&lt;/a&gt;第三步、复制地址&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/getHTTPS-teach_3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第四步、打开你一开始创建的Hexo文件夹（如F-Blog-Hexo），用记事本打开刚文件夹下的-config-yml文件&quot;&gt;&lt;a href=&quot;#第四步、打开你一开始创建的Hexo文件夹（如F-Blog-Hexo），用记事本打开刚文件夹下的-config-yml文件&quot; class=&quot;headerlink&quot; title=&quot;第四步、打开你一开始创建的Hexo文件夹（如F:\Blog\Hexo），用记事本打开刚文件夹下的_config.yml文件&quot;&gt;&lt;/a&gt;第四步、打开你一开始创建的Hexo文件夹（如F:\Blog\Hexo），用记事本打开刚文件夹下的_config.yml文件&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/getHTTPS-teach_4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第五步、在配置文件里作如下修改，保存&quot;&gt;&lt;a href=&quot;#第五步、在配置文件里作如下修改，保存&quot; class=&quot;headerlink&quot; title=&quot;第五步、在配置文件里作如下修改，保存&quot;&gt;&lt;/a&gt;第五步、在配置文件里作如下修改，保存&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/getHTTPS-teach_5.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;第六步、在Hexo文件夹下执行：&quot;&gt;&lt;a href=&quot;#第六步、在Hexo文件夹下执行：&quot; class=&quot;headerlink&quot; title=&quot;第六步、在Hexo文件夹下执行：&quot;&gt;&lt;/a&gt;第六步、在Hexo文件夹下执行：&lt;/h4&gt;&lt;pre&gt;&lt;code&gt;hexo g
hexo d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者直接执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo g -d
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;执行完之后会让你输入github的账号和密码，输入完后就可以登录我们自己的部署在Github Pages服务器上的博客了。对应的地址是 username.github.io(我的是：ryanlijianchang.github.io)。&lt;/p&gt;
&lt;h4 id=&quot;第七步、在浏览器上输入自己的主页地址&quot;&gt;&lt;a href=&quot;#第七步、在浏览器上输入自己的主页地址&quot; class=&quot;headerlink&quot; title=&quot;第七步、在浏览器上输入自己的主页地址&quot;&gt;&lt;/a&gt;第七步、在浏览器上输入自己的主页地址&lt;/h4&gt;&lt;p&gt;在浏览器上输入即可看到我们自己的博客，别人电脑输入也可以哦。&lt;br&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/blog-main.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;美化自己博客&quot;&gt;&lt;a href=&quot;#美化自己博客&quot; class=&quot;headerlink&quot; title=&quot;美化自己博客&quot;&gt;&lt;/a&gt;美化自己博客&lt;/h2&gt;&lt;p&gt;那么现在我们的博客已经挂在了服务器上面，别人已经可以通过网址来登陆我们的博客了，但是我们这时就有了新的需求，就是自己的博客并不好看，那怎么办的？这很简单，要知道很多前端开发者在Hexo框架下开发了很多的主题给我们使用，我们只需要把他们的主题克隆过来，然后通过修改配置文件即可达到我们所需要的效果。&lt;/p&gt;
&lt;p&gt;那么我们应该怎么修改呢？&lt;/p&gt;
&lt;h3 id=&quot;一、进入Hexo的官网主题专栏&quot;&gt;&lt;a href=&quot;#一、进入Hexo的官网主题专栏&quot; class=&quot;headerlink&quot; title=&quot;一、进入Hexo的官网主题专栏&quot;&gt;&lt;/a&gt;一、进入&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo的官网主题专栏&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/themes.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;二、挑选我们喜欢的主题&quot;&gt;&lt;a href=&quot;#二、挑选我们喜欢的主题&quot; class=&quot;headerlink&quot; title=&quot;二、挑选我们喜欢的主题&quot;&gt;&lt;/a&gt;二、挑选我们喜欢的主题&lt;/h3&gt;&lt;p&gt;可以看到有很多主题给我们选，我们只要选择喜欢的主题点击进去，然后进入到它的github地址，我们只要把这个地址复制下来(例如我是选择：hexo-theme-next这个主题)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/address.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;三、克隆主题&quot;&gt;&lt;a href=&quot;#三、克隆主题&quot; class=&quot;headerlink&quot; title=&quot;三、克隆主题&quot;&gt;&lt;/a&gt;三、克隆主题&lt;/h3&gt;&lt;p&gt;再打开Hexo文件夹下的themes目录（F:\Blog\hexo\themes），右键Git Bash，在命令行输入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/iissnan/hexo-theme-next(此处地址替换成你需要使用的主题的地址) 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;下载中，等待下载完成：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/downloading.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;四、修改Hexo配置文件&quot;&gt;&lt;a href=&quot;#四、修改Hexo配置文件&quot; class=&quot;headerlink&quot; title=&quot;四、修改Hexo配置文件&quot;&gt;&lt;/a&gt;四、修改Hexo配置文件&lt;/h3&gt;&lt;p&gt;下载完成后，打开Hexo文件夹下的配置文件&lt;code&gt;_config.yml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;修改参数为：&lt;code&gt;theme: hexo-theme-next&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;五、部署主题，本地查看效果&quot;&gt;&lt;a href=&quot;#五、部署主题，本地查看效果&quot; class=&quot;headerlink&quot; title=&quot;五、部署主题，本地查看效果&quot;&gt;&lt;/a&gt;五、部署主题，本地查看效果&lt;/h3&gt;&lt;p&gt;返回Hexo目录，右键Git Bash，输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo g
hexo s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;打开浏览器，输入 &lt;code&gt;http://localhost:4000/&lt;/code&gt; 即可看见我们的主题已经更换了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/new-theme.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;六、如果效果满意，将它部署到Github上&quot;&gt;&lt;a href=&quot;#六、如果效果满意，将它部署到Github上&quot; class=&quot;headerlink&quot; title=&quot;六、如果效果满意，将它部署到Github上&quot;&gt;&lt;/a&gt;六、如果效果满意，将它部署到Github上&lt;/h3&gt;&lt;p&gt;打开Hexo文件夹，右键Git Bash，输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo clean   (必须要，不然有时因为缓存问题，服务器更新不了主题)
hexo g -d
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;七、打开自己的主页，即可看到修改后的效果&quot;&gt;&lt;a href=&quot;#七、打开自己的主页，即可看到修改后的效果&quot; class=&quot;headerlink&quot; title=&quot;七、打开自己的主页，即可看到修改后的效果&quot;&gt;&lt;/a&gt;七、打开自己的主页，即可看到修改后的效果&lt;/h3&gt;&lt;p&gt;更多修改效果请查看对应主题的说明文档，&lt;a href=&quot;http://theme-next.iissnan.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击此&lt;/a&gt;查看本主题(Next)对应的说明文档。&lt;/p&gt;
&lt;h2 id=&quot;在博客写文章&quot;&gt;&lt;a href=&quot;#在博客写文章&quot; class=&quot;headerlink&quot; title=&quot;在博客写文章&quot;&gt;&lt;/a&gt;在博客写文章&lt;/h2&gt;&lt;h3 id=&quot;一、用hexo发表新文章&quot;&gt;&lt;a href=&quot;#一、用hexo发表新文章&quot; class=&quot;headerlink&quot; title=&quot;一、用hexo发表新文章&quot;&gt;&lt;/a&gt;一、用hexo发表新文章&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;$ hexo n &amp;quot;文章标题&amp;quot; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中 我的家 为文章标题，执行命令 &lt;code&gt;hexo n &amp;quot;我的家&amp;quot;&lt;/code&gt; 后，会在项目 \Hexo\source_posts 中生成 &lt;code&gt;我的家.md&lt;/code&gt;文件，用编辑器打开编写即可。&lt;/p&gt;
&lt;p&gt;当然，也可以直接在\Hexo\source_posts中新建一个md文件，我就是这么做的。&lt;br&gt;写完后，推送到服务器上，执行以下命令即可在我们的站点看到新的文章。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo g #生成
$ hexo d #部署 # 可与hexo g合并为 hexo d -g
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;二、用Markdown写文章&quot;&gt;&lt;a href=&quot;#二、用Markdown写文章&quot; class=&quot;headerlink&quot; title=&quot;二、用Markdown写文章&quot;&gt;&lt;/a&gt;二、用Markdown写文章&lt;/h3&gt;&lt;p&gt;我们注意到在 \Hexo\source_posts 文件夹下存放着我们的文章，它们的格式都是以&lt;code&gt;.md&lt;/code&gt;格式结尾的，没错，Hexo也是支持Markdown语法的，所以当我们需要写具有格式化的文章时，我们可以使用支持Markdown语法的编辑器进行文章编译，然后保存文件到 \Hexo\source_posts 文件夹下即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/markdown.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;复制进去之后，只要执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hexo d -g 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;推送到我们的Github仓库即可。&lt;/p&gt;
&lt;h4 id=&quot;那么什么是Markdown？&quot;&gt;&lt;a href=&quot;#那么什么是Markdown？&quot; class=&quot;headerlink&quot; title=&quot;那么什么是Markdown？&quot;&gt;&lt;/a&gt;那么什么是Markdown？&lt;/h4&gt;&lt;p&gt;Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。&lt;/p&gt;
&lt;h4 id=&quot;Markdown有什么优点？&quot;&gt;&lt;a href=&quot;#Markdown有什么优点？&quot; class=&quot;headerlink&quot; title=&quot;Markdown有什么优点？&quot;&gt;&lt;/a&gt;Markdown有什么优点？&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;专注你的文字内容而不是排版样式。&lt;/li&gt;
&lt;li&gt;轻松的导出 HTML、PDF 和本身的 .md 文件。&lt;/li&gt;
&lt;li&gt;纯文本内容，兼容所有的文本编辑器与字处理软件。&lt;/li&gt;
&lt;li&gt;可读，直观。适合所有人的写作语言。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;我该用什么工具？&quot;&gt;&lt;a href=&quot;#我该用什么工具？&quot; class=&quot;headerlink&quot; title=&quot;我该用什么工具？&quot;&gt;&lt;/a&gt;我该用什么工具？&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Windows下可以使用 MarkdownPad2。&lt;/li&gt;
&lt;li&gt;在 Mac OS X 上，我建议你用 Mou 这款免费且十分好用的 Markdown 编辑器。&lt;/li&gt;
&lt;li&gt;Web 端上，我强烈推荐 简书 这款产品。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于Markdown的更多资料可以查看如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://sspai.com/25137&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;认识与入门 Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.douban.com/note/350126154/?type=like&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown入门指南&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;将自己的域名关联到Github-Pages上&quot;&gt;&lt;a href=&quot;#将自己的域名关联到Github-Pages上&quot; class=&quot;headerlink&quot; title=&quot;将自己的域名关联到Github Pages上&quot;&gt;&lt;/a&gt;将自己的域名关联到Github Pages上&lt;/h2&gt;&lt;p&gt;很多朋友创建了自己的博客之后会选择买一个属于自己的域名，然后将自己域名绑定到自己的Github Pages博客上，其实这也并不难，只要你有个域名。&lt;/p&gt;
&lt;h3 id=&quot;一、购买域名&quot;&gt;&lt;a href=&quot;#一、购买域名&quot; class=&quot;headerlink&quot; title=&quot;一、购买域名&quot;&gt;&lt;/a&gt;一、购买域名&lt;/h3&gt;&lt;p&gt;如果你不是很有钱，在&lt;a href=&quot;https://wanwang.aliyun.com/domain/?spm=5176.383338.1907008.1.LWIFhw&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;阿里云&lt;/a&gt;上，你只要几块钱就可以买到一个域名。&lt;/p&gt;
&lt;p&gt;选择你喜欢的域名，然后购买即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/yuming.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;二、配置CNAME文件&quot;&gt;&lt;a href=&quot;#二、配置CNAME文件&quot; class=&quot;headerlink&quot; title=&quot;二、配置CNAME文件&quot;&gt;&lt;/a&gt;二、配置CNAME文件&lt;/h3&gt;&lt;p&gt;在 \hexo\source 文件夹下创建文件 CNAME  （新建记事本文件命名CNAME，然后打开）&lt;/p&gt;
&lt;p&gt;内容为你的域名，例如我的域名是：lijianchang.xyz&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/cname2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在Hexo文件夹提交&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hexo g -d
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;三、修改DNS的DNS&quot;&gt;&lt;a href=&quot;#三、修改DNS的DNS&quot; class=&quot;headerlink&quot; title=&quot;三、修改DNS的DNS&quot;&gt;&lt;/a&gt;三、修改DNS的DNS&lt;/h3&gt;&lt;p&gt;1.如果你是在阿里云购买域名的话，请登录阿里云网站。打开个人中心，点击域名&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/domain_1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.选择管理&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/domain_2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;3.修改DNS为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;f1g1ns2.dnspod.net 
f1g1ns1.dnspod.net 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/domain_3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;四、域名解析&quot;&gt;&lt;a href=&quot;#四、域名解析&quot; class=&quot;headerlink&quot; title=&quot;四、域名解析&quot;&gt;&lt;/a&gt;四、域名解析&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;打开&lt;a href=&quot;https://www.dnspod.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DNSPOD&lt;/a&gt;，注册一个账户&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;点击添加域名，把你的域名添加进去，如无意外，添加完之后就是以下这个状态&lt;br&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/domain_4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;此时点击添加记录，添加两个记录，一个主机记录为&lt;code&gt;@&lt;/code&gt;， 一个为&lt;code&gt;www&lt;/code&gt;，而记录值都是填同一个，填你的博客主页对应的ip，添加完后如下。&lt;br&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/ip2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;但是如何获取ip值呢？打开运行，输入cmd，打开命令窗口输入 &lt;code&gt;ping 主页地址&lt;/code&gt; ， 红色部分即为你的ip值&lt;br&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/ip.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将IP输入过去即可。等待生效，最迟72小时生效。即可通过你的域名浏览你的博客主页。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;结语&quot;&gt;&lt;a href=&quot;#结语&quot; class=&quot;headerlink&quot; title=&quot;结语&quot;&gt;&lt;/a&gt;结语&lt;/h2&gt;&lt;p&gt;当你完成了你的博客之后，相信你的心情跟我刚做完的心情是一样的，即便很累，但是当自己的博客成型之后，自己还是有一个成就感的，那么完成后，以后的路还很长，真正想要自己博客能够积累人气，还得靠好的内容，所以认真写文章吧，相信你会受益于此的。&lt;/p&gt;
&lt;p&gt;如果大家有什么问题的话，可以在我留言板下留言，我看到评论时会第一时间回答大家。&lt;/p&gt;
&lt;h2 id=&quot;参考资料：&quot;&gt;&lt;a href=&quot;#参考资料：&quot; class=&quot;headerlink&quot; title=&quot;参考资料：&quot;&gt;&lt;/a&gt;参考资料：&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://wowubuntu.com/markdown/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown入门手册中文版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/1e402922ee32/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown–入门指南&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cnfeat.com/blog/2014/05/10/how-to-build-a-blog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何搭建一个独立博客——简明 Github Pages与 jekyll 教程&lt;/a&gt; by cnfeat&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/zhcncn/p/4097881.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo搭建Github静态博客&lt;/a&gt; by 金石开&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.xuanfengge.com/using-ssh-key-link-github-photo-tour.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用SSH密钥连接Github【图文教程】&lt;/a&gt; by 轩枫&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;首先欢迎各位来参观我的博客：&lt;a href=&quot;http://lijianchang.xyz/&quot;&gt;Ryane’s Blog&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Github地址：&lt;a href=&quot;https://github.com/ryanlijianchang/ryanlijianchang.github.io&quot;&gt;https://github.com/ryanlijianchang/ryanlijianchang.github.io&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;摘要：这是一篇有关如何使用Github Pages和Hexo搭建自己独立博客的详尽教程，里面介绍了如何使用和配置Hexo框架，如何将Hexo部署到自己的Github项目中，域名注册，以及域名的绑定，还有我在搭建自己博客过程中所遇到的各种困难。&lt;/p&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;我是一名安卓入门开发者，但，我只是&lt;strong&gt;入门&lt;/strong&gt;！而且我对网站开发以及前端的知识几乎是零基础，所以在自己刚接触这个东西的时候，我像很多人一样，都是上网找教程，但是要知道，&lt;strong&gt;那都是程序员的教程。&lt;/strong&gt;所以对于我这个网站技术小白来说，真是很难受，所以藉此机会写一篇让小白看得懂的教程。如果你是一个小白而且又想做自己的博客，可以，请跟着我的脚步，我会带你真真正正做一个属于你自己的博客。&lt;/p&gt;
&lt;p&gt;如果你还不知道你为什么要做一个博客，推荐你看：&lt;a href=&quot;http://www.cnblogs.com/jhzhu/p/3893297.html&quot;&gt;《我为什么写博客》&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;入门门槛&quot;&gt;&lt;a href=&quot;#入门门槛&quot; class=&quot;headerlink&quot; title=&quot;入门门槛&quot;&gt;&lt;/a&gt;入门门槛&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;必须耐得住折腾。&lt;/li&gt;
&lt;li&gt;刻苦的学习精神和耐心。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;关于Github&quot;&gt;&lt;a href=&quot;#关于Github&quot; class=&quot;headerlink&quot; title=&quot;关于Github&quot;&gt;&lt;/a&gt;关于Github&lt;/h2&gt;&lt;center&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/github-jxw.jpg&quot; alt=&quot;&quot;&gt;&lt;/center&gt;
    
    </summary>
    
      <category term="Hexo" scheme="lijianchang.xyz/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="lijianchang.xyz/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to my blog</title>
    <link href="lijianchang.xyz/2016/03/12/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>lijianchang.xyz/2016/03/12/欢迎来到我的博客/</id>
    <published>2016-03-12T12:07:40.269Z</published>
    <updated>2016-03-16T05:07:32.768Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/Post-WelcomeToMyBlogback.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;博客刚刚搭建完成，很多东西都不懂，多多指教！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xrwkh.com1.z0.glb.clouddn.com/Post-WelcomeToMyBlogback.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;博客刚刚搭建完成，很多东西都不懂，多多指教！&lt;/p&gt;

    
    </summary>
    
      <category term="life" scheme="lijianchang.xyz/categories/life/"/>
    
    
      <category term="blog" scheme="lijianchang.xyz/tags/blog/"/>
    
  </entry>
  
</feed>
